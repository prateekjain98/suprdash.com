---
import Feedback from "@/components/Feedback.astro";
import Base from "@/layouts/Base.astro";
import { markdownify } from "@/lib/utils/textConverter";
import CallToAction from "@/partials/CallToAction.astro";
import Button from "@/shortcodes/Button";
import { Icon } from "astro-icon/components";
import type { CollectionEntry } from "astro:content";
import { getEntry } from "astro:content";

const featureIndex = (await getEntry(
  "feature",
  "-index"
)) as CollectionEntry<"feature">;
const { title, meta_title, description, hero, features } = featureIndex.data;

const call_to_action = (await getEntry(
  "ctaSection",
  "call-to-action"
)) as CollectionEntry<"ctaSection">;
---

<Base title={title} meta_title={meta_title} description={description}>
  <section class="section">
    <div class="container">
      <div class="mx-auto text-center mb-16">
        <h1
          class="pb-4 text-balance"
          data-aos="fade-up-sm"
          set:html={markdownify(hero.title)}
        />
        <p
          class="pb-8 text-xl text-balance"
          data-aos="fade-up-sm"
          set:html={markdownify(hero.content)}
        />
      </div>

      <div class="row justify-center g-4">
        {
          features.map((feature: any, i: number) => (
            <div
              class="col-12 lg:col-5 sm:col-6"
              data-aos="fade-up-sm"
              data-aos-delay={50 + i * 50}
            >
              <div class="bg-gradient border-border p-8 pb-4 rounded-2xl">
                <div class="flex flex-col lg:flex-row gap-5 justify-center lg:justify-between mb-4">
                  <div>
                    <div class="rounded-full w-fit p-5 bg-primary">
                      <Icon name={feature.icon} />
                    </div>
                  </div>
                  <div class="flex flex-col">
                    <h6 class="mb-3" set:html={feature.title} />
                    <p class="mb-8" set:html={feature.content} />
                    <div class="w-fit">
                      <Button
                        label={feature.button.label}
                        link={feature.button.link}
                        style="outline"
                      />
                    </div>
                  </div>
                </div>
              </div>
            </div>
          ))
        }
      </div>
    </div>
  </section>

  <Feedback />
  <CallToAction call_to_action={call_to_action.data} className="max-md:pt-0" />
</Base>
