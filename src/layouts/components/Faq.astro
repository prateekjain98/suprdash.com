---
import { markdownify } from "@/lib/utils/textConverter";
import type { CollectionEntry } from "astro:content";
import { getEntry } from "astro:content";

const faqIndex = (await getEntry(
  "faqSection",
  "faq"
)) as CollectionEntry<"faqSection">;
const { title, content, faqs } = faqIndex.data;

const { className } = Astro.props;
---

<section class={`${className} section max-lg:pt-0`}>
  <div class="container">
    <div class="row gy-4 justify-center">
      <div class="col-10 lg:col-5">
        <div class="lg:w-1/2">
          <h2
            set:html={markdownify(title)}
            class="mb-5"
            data-aos="fade-up-sm"
          />
          <p set:html={markdownify(content)} data-aos="fade-up-sm" />
        </div>
      </div>
      <div class="col-12 lg:col-5">
        <div class="accordion-container">
          {
            faqs.map((f: any, index: number) => (
              <div
                class={"accordion" + (index === 0 ? " active" : "")}
                data-aos="fade-up-sm"
                data-aos-delay={50 + index * 50}
              >
                <button class="accordion-header" data-accordion>
                  {f.question}
                  <svg
                    class="accordion-icon"
                    x="0px"
                    y="0px"
                    viewBox="0 0 512 512"
                    xml:space="preserve"
                  >
                    <path
                      fill="currentColor"
                      d="M505.755,123.592c-8.341-8.341-21.824-8.341-30.165,0L256.005,343.176L36.421,123.592c-8.341-8.341-21.824-8.341-30.165,0 s-8.341,21.824,0,30.165l234.667,234.667c4.16,4.16,9.621,6.251,15.083,6.251c5.462,0,10.923-2.091,15.083-6.251l234.667-234.667 C514.096,145.416,514.096,131.933,505.755,123.592z"
                    />
                  </svg>
                </button>
                <div class="accordion-content">
                  <p>{f.answer}</p>
                </div>
              </div>
            ))
          }
        </div>
      </div>
    </div>
  </div>
</section>

<script>
  document.addEventListener("astro:page-load", () => {
    const accordionContainer = document.querySelector(".accordion-container");
    const accordionHeaders = document.querySelectorAll("[data-accordion]");

    accordionHeaders.forEach((header) => {
      header.addEventListener("click", () => {
        const clickedItem = header.parentElement;

        // Close all other accordion items
        const allAccordionItems =
          accordionContainer?.querySelectorAll(".accordion");
        allAccordionItems?.forEach((item) => {
          if (item !== clickedItem && item.classList.contains("active")) {
            item.classList.remove("active");
          }
        });

        // Toggle the clicked item
        if (clickedItem) {
          clickedItem.classList.toggle("active");
        }
      });
    });
  });
</script>
